{"version":3,"sources":["about/About.js","list/List.js","article/Article.js","post/Post.js","App.js","serviceWorker.js","index.js"],"names":["About","className","width","height","viewBox","id","x1","x2","y1","y2","offset","stopColor","x","y","patternUnits","d","mask","fill","attributeName","begin","dur","type","from","to","repeatCount","textAnchor","fillOpacity","List","props","state","error","isLoaded","articles","fetch","then","res","json","data","setState","reverse","catch","e","this","map","article","key","title","Component","Article","handleBack","changeEditMode","isInEditMode","handleInputChange","target","name","value","handleDelete","method","history","push","handleSend","author","body","JSON","stringify","headers","Headers","console","log","match","params","articleId","createdAt","onChange","placeholder","defaultValue","onClick","Post","onSubmit","preventDefault","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15c69972.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction About() {\r\n  const about = '五十鈴川';\r\n  return <div className='about'>\r\n    <svg className='svg-about' width=\"400\" height=\"200\" viewBox=\"30 -10 40 40\">\r\n      <defs>\r\n        <linearGradient id=\"gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\r\n          <stop offset=\"10%\" stopColor=\"#58B2DC\" />\r\n          <stop offset=\"95%\" stopColor=\"#81C7D4\" />\r\n        </linearGradient>\r\n        <pattern id=\"wave\" x=\"0\" y=\"0\" width=\"120\" height=\"20\" patternUnits=\"userSpaceOnUse\">\r\n          <path id=\"wavePath\" d=\"M-40 9 Q-30 7 -20 9 T0 9 T20 9 T40 9 T60 9 T80 9 T100 9 T120 9 V20 H-40z\" mask=\"url(#mask)\" fill=\"url(#gradient)\">\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              begin=\"0s\"\r\n              dur=\"2.5s\"\r\n              type=\"translate\"\r\n              from=\"0,0\"\r\n              to=\"40,0\"\r\n              repeatCount=\"indefinite\" />\r\n          </path>\r\n        </pattern>\r\n      </defs>\r\n      <text textAnchor=\"middle\" x=\"50\" y=\"15\" fill=\"url(#gradient)\" fillOpacity=\"0.5\">{about}</text>\r\n      <text textAnchor=\"middle\" x=\"50\" y=\"15\" fill=\"url(#wave)\" fillOpacity=\"0.8\">{about}</text>\r\n    </svg>\r\n  </div>\r\n}\r\n\r\nexport default About ","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './List.css';\r\n\r\nclass List extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: '',\r\n      isLoaded: false,\r\n      articles: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://qootest.com/posts\")\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          articles: data.reverse(),\r\n        });\r\n      }\r\n      ).catch(e => {\r\n        this.setState({\r\n          error: e,\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, articles } = this.state;\r\n    if (error !== '') {\r\n      return <div>{error}</div>;\r\n    }\r\n    else if (!isLoaded) {\r\n      return <div className='loading'>loading...</div>;\r\n    }\r\n    else {\r\n      return (\r\n        <div className='list-group'>\r\n          {articles.map(article =>\r\n            <Link key={article.id} className='list-group__item' to={`/article/${article.id}`}>\r\n              <div className='list-group__id'>{article.id}</div>\r\n              <div className='list-group__title'>{article.title}</div>\r\n            </Link>)}\r\n        </div >\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default List","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './Article.css';\r\n\r\nclass Article extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: '',\r\n      body: '',\r\n      author: '',\r\n      isLoaded: false,\r\n      isInEditMode: false,\r\n      id: this.props.match.params.articleId\r\n    };\r\n  }\r\n\r\n  handleBack = () => {\r\n    this.id = '';\r\n  }\r\n\r\n  changeEditMode = () => {\r\n    const { isInEditMode } = this.state;\r\n    this.setState({\r\n      isInEditMode: !isInEditMode,\r\n    })\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n\r\n  handleDelete = () => {\r\n    const { id } = this.state;\r\n    fetch(`https://qootest.com/posts/${id}`, {\r\n      method: 'DELETE',\r\n    }).then(() => {\r\n      this.props.history.push('/list');\r\n    }).catch((e) => {\r\n      this.setState({\r\n        error: e,\r\n      })\r\n    })\r\n  }\r\n\r\n  handleSend = () => {\r\n    const { id, title, author, body } = this.state;\r\n    const data = JSON.stringify({ title, author, body, })\r\n    fetch(`https://qootest.com/posts/${id}`, {\r\n      method: 'PUT',\r\n      body: data,\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    }\r\n    ).then(() => {\r\n      this.setState({\r\n        isInEditMode: false,\r\n      })\r\n    }).catch(e => {\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.state;\r\n    fetch(`https://qootest.com/posts/${id}`)\r\n      .then(res => {\r\n        return res.json();\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          isLoaded: true,\r\n          title: data.title,\r\n          body: data.body,\r\n          author: data.author,\r\n          createdAt: data.createdAt,\r\n        });\r\n      }\r\n      ).catch(e => {\r\n        console.log(e)\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { isInEditMode, isLoaded, title, body, author, createdAt } = this.state;\r\n    if (!isLoaded) {\r\n      return <div className='loading'>loading...</div>;\r\n    }\r\n    else {\r\n      return (\r\n        <div className='article'>\r\n          {isInEditMode ?\r\n            <input className='article__editTitle' type='text' name='title' onChange={this.handleInputChange}\r\n              placeholder='Enter Title Here' defaultValue={title}></input>\r\n            :\r\n            <div className='article__title'>\r\n              Title: {title}\r\n            </div>\r\n          }\r\n          <div className='article__detail'>\r\n            {isInEditMode ?\r\n              <input className='article__detail' defaultValue={author} name='author' onChange={this.handleInputChange}></input>\r\n              :\r\n              <div className='article__detail__author'>\r\n                Author: {author}\r\n              </div>\r\n            }\r\n            <div className='article__detail__create'>\r\n              Created at: {createdAt}\r\n            </div>\r\n          </div>\r\n          {isInEditMode ?\r\n            <textarea className='article__editContent' defaultValue={body} name='body' onChange={this.handleInputChange}>\r\n            </textarea>\r\n            :\r\n            <div className='article__content'>\r\n              {body}\r\n            </div>\r\n          }\r\n\r\n          <div className='article__btn'>\r\n            <Link className='btn btn__back' to={'/list'}>Back</Link>\r\n            {isInEditMode ?\r\n              <button className='btn btn__send' onClick={this.handleSend}>Send</button>\r\n              : <button className='btn btn__edit' onClick={this.changeEditMode}>Edit</button>\r\n            }\r\n            <button className='btn btn__delete' onClick={this.handleDelete}>Delete</button>\r\n          </div>\r\n        </div>)\r\n    }\r\n  }\r\n}\r\n\r\nexport default Article;","import React, { Component } from 'react';\r\nimport './Post.css';\r\n\r\nclass Post extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: '',\r\n      body: '',\r\n      author: '',\r\n    }\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { title, author, body } = this.state;\r\n    const data = JSON.stringify({ title, author, body, })\r\n    fetch('https://qootest.com/posts/', {\r\n      method: 'POST',\r\n      body: data,\r\n      headers: new Headers({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    }).then(() => {\r\n      this.props.history.push('/list');\r\n    }).catch((e) => {\r\n      console.log(e)\r\n    })\r\n  }\r\n  render() {\r\n    const { title, body, author } = this.state;\r\n    return (\r\n      <div className='post'>\r\n        <div className='post__title'>title: <input value={title} name='title' onChange={this.handleInputChange} /></div>\r\n        <div className='post__author'>author: <input value={author} name='author' onChange={this.handleInputChange} /></div>\r\n        <textarea className='post__textarea' value={body} name='body' onChange={this.handleInputChange} />\r\n        <button className='btn btn__submit' onClick={this.onSubmit}>Submit</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Post;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Link, } from \"react-router-dom\";\nimport About from './about';\nimport List from './list';\nimport Article from './article';\nimport Post from './post';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className='wrapper'>\n          <header>\n            <div className=\"container\">\n              <div className='header__img'></div>\n              <div className='navbar'>\n                <Link className='navbar__btn navbar__btn__about' to={'/about'}>\n                  ABOUT\n              </Link>\n                <Link className='navbar__btn navbar__btn__post' to={'/post'}>\n                  POST\n              </Link>\n                <Link className='navbar__btn navbar__btn__list' to={'/list'}>\n                  LIST\n              </Link>\n              </div>\n            </div >\n          </header >\n          <main>\n            <div className='main__background'></div>\n            <div className='main__content'>\n              <Route exact path='/' component={List} />\n              <Route path='/about' component={About} />\n              <Route path='/post/' component={Post} />\n              <Route path='/list' component={List} />\n              <Route path='/article/:articleId' component={Article} />\n            </div>\n          </main>\n          <footer>Made by Ponchimeow</footer>\n        </div >\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}